{"mappings":"C,A,eEK8B,EEL9B,SAAS,EAAqB,CAAG,CAAE,CAAG,EAC9B,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CHDA,ACCW,CAAA,AAAA,CAAA,SCJmB,CAAG,EAC7B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,CDEW,EADmB,EDFX,SAAS,gBAAgB,CAAC,WCGL,AAAA,SGNZ,CAAI,EAC5B,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EHE2D,IAAQ,AAAA,SKJ3B,CAAC,CAAE,CAAM,EAC7C,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAFhB,KAAA,GAIvC,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EARlE,KAAA,GAS3C,ELLkG,IAAQ,AAAA,WILtG,MAAM,AAAI,UAAU,uIACxB,GJII,EDDG,OAAO,CAAC,SAAC,CAAhB,MOHQ,EACA,EACE,EAEF,EAJA,EAAS,APIN,EOJY,UAAU,CACzB,EAAQ,SAAS,aAAa,CAAC,SAC7B,EAAa,APEZ,EOFD,EAAA,CAEF,EAuBC,AAzBc,APEZ,EOFG,IAAZ,CAyBY,OAAO,CAAC,WAAY,OAAO,WAAW,GArBlD,EAAM,YAAY,CAAC,QAAS,eAC5B,EAAM,YAAY,CAAC,MAAO,GAAM,MAAA,CAAH,IAC7B,EAAM,WAAW,CAAG,EACpB,EAAO,WAAW,CAAC,GPJnB,AAAA,SOO6B,CAAK,EAElC,IAAM,EAMC,AAPU,EAAT,IAAR,CAQG,OAAO,CAAC,WAAY,OACpB,WAAW,GACX,OAAO,CAAC,KAAM,SAAC,CAHlB,EAG0B,OAAA,EAAI,WAAW,E,GAPzC,EAAM,YAAY,CAAC,cAAe,GAAmB,MAAA,CAAhB,GACvC,EPZiB,EACjB,E","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","src/scripts/helpers.js"],"sourcesContent":["(function () {\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n/* eslint-disable no-shadow */ function $f07f8edeb99d6764$export$4f65e594f6031297(input) {\n    var parent = input.parentNode;\n    var label = document.createElement(\"label\");\n    var id = input.id, name = input.name;\n    var normalName = $f07f8edeb99d6764$var$camelToUpper(name);\n    label.setAttribute(\"class\", \"field-label\");\n    label.setAttribute(\"for\", \"\".concat(id));\n    label.textContent = normalName;\n    parent.appendChild(label);\n}\nfunction $f07f8edeb99d6764$export$645bf5697adfa088(input) {\n    var name = input.name;\n    var capitalizedName = $f07f8edeb99d6764$var$camelToNormal(name);\n    input.setAttribute(\"placeholder\", \"\".concat(capitalizedName));\n}\nfunction $f07f8edeb99d6764$var$camelToNormal(word) {\n    return word.replace(/([A-Z])/g, \" $1\").toLowerCase().replace(/^./, function(str) {\n        return str.toUpperCase();\n    });\n}\nfunction $f07f8edeb99d6764$var$camelToUpper(word) {\n    return word.replace(/([A-Z])/g, \" $1\").toUpperCase();\n}\n\n\n\"use strict\";\nvar $197cd56b15c33885$var$inputs = (0, $227c6742e0ff6f82$export$71511d61b312f219)(document.querySelectorAll(\"input\"));\n$197cd56b15c33885$var$inputs.forEach(function(input) {\n    (0, $f07f8edeb99d6764$export$4f65e594f6031297)(input);\n    (0, $f07f8edeb99d6764$export$645bf5697adfa088)(input);\n});\n\n})();\n//# sourceMappingURL=index.cf3dce4f.js.map\n","'use strict';\nimport { setLabel, setPlaceholder } from './helpers.js';\n\nconst inputs = [...document.querySelectorAll('input')];\n\ninputs.forEach((input) => {\n  setLabel(input);\n  setPlaceholder(input);\n});\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","/* eslint-disable no-shadow */\nexport function setLabel(input) {\n  const parent = input.parentNode;\n  const label = document.createElement('label');\n  const { id, name } = input;\n\n  const normalName = camelToUpper(name);\n\n  label.setAttribute('class', 'field-label');\n  label.setAttribute('for', `${id}`);\n  label.textContent = normalName;\n  parent.appendChild(label);\n}\n\nexport function setPlaceholder(input) {\n  const { name } = input;\n  const capitalizedName = camelToNormal(name);\n\n  input.setAttribute('placeholder', `${capitalizedName}`);\n}\n\nfunction camelToNormal(word) {\n  return word\n    .replace(/([A-Z])/g, ' $1')\n    .toLowerCase()\n    .replace(/^./, (str) => str.toUpperCase());\n}\n\nfunction camelToUpper(word) {\n  return word.replace(/([A-Z])/g, ' $1').toUpperCase();\n}\n"],"names":["arr","$c3b10a83b523f372$export$71511d61b312f219","len","length","i","arr2","Array","$197cd56b15c33885$var$inputs","isArray","document","querySelectorAll","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","forEach","input","parent","label","id","normalName","parentNode","createElement","word","replace","toUpperCase","setAttribute","concat","textContent","appendChild","capitalizedName","toLowerCase","str"],"version":3,"file":"index.cf3dce4f.js.map"}